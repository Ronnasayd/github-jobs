{"version":3,"sources":["components/Menu/styles.ts","components/Menu/index.tsx","components/CardList/styles.ts","components/CardList/index.tsx","App.tsx","styles/index.ts","store/duck.ts","config/index.ts","services/index.ts","store/sagas.ts","store/index.ts","index.tsx","assets/images/logo-default.png","assets/images/description.svg","assets/images/location.svg"],"names":["Container","styled","div","SearchButton","button","Menu","descriptionRef","useRef","locationRef","dispatch","useDispatch","htmlFor","src","descriptionSVG","alt","type","id","ref","locationSVG","onClick","description","current","value","location","Cards","ul","CardItem","li","Content","CardList","jobs","useSelector","state","addDefaultSrc","e","target","logoDefault","map","job","key","href","url","rel","company_logo","onError","title","company","App","useEffect","GlobalStyle","createGlobalStyle","INITIAL_STATE","createActions","addJobs","Types","Creators","HANDLERS","ADD_JOBS","action","nextState","produce","draftState","reducer","createReducer","Reactotron","configure","use","reactotronRedux","sagaPlugin","reactotron","api","axios","create","baseURL","getCards","get","params","fetchJobs","mySaga","call","response","put","actionJobs","data","console","error","all","takeLatest","composer","sagaMiddleware","createSagaMiddleware","compose","applyMiddleware","store","createStore","run","rootSaga","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8fbae8d6.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  @media screen and (max-width: 425px) {\n    flex-direction: column;\n  }\n  color: rgba(255, 255, 255, 0.87);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n  flex-wrap: wrap;\n  padding: 10px;\n  background: #242424;\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n    0 1px 5px 0 rgba(0, 0, 0, 0.12);\n\n  label {\n    height: 100%;\n    display: flex;\n    align-items: center;\n    margin: 10px 20px;\n    input {\n      height: 60%;\n      max-width: 150px;\n      background: transparent;\n      border-bottom: 1px solid rgba(255, 255, 255, 0.5);\n      color: white;\n      padding: 0px 10px;\n    }\n  }\n`;\n\nexport const SearchButton = styled.button`\n  background: transparent;\n  border: 2px solid #00c86f;\n  padding: 0px 20px;\n  color: rgba(255, 255, 255, 0.87);\n  height: 40px;\n  width: 100px;\n  border-radius: 4px;\n  margin: 10px 0px;\n  &:hover {\n    color: white;\n    font-weight: 800;\n    border: 2px solid #00c86f;\n    box-shadow: 0px 0px 13px #00c86f;\n  }\n`;\n","import React, { useRef } from \"react\";\n\nimport { Container, SearchButton } from \"./styles\";\nimport descriptionSVG from \"../../assets/images/description.svg\";\nimport locationSVG from \"../../assets/images/location.svg\";\nimport { useDispatch } from \"react-redux\";\n\nconst Menu: React.FC = () => {\n  const descriptionRef = useRef<HTMLInputElement>(null);\n  const locationRef = useRef<HTMLInputElement>(null);\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <label htmlFor=\"description\">\n        <img src={descriptionSVG} alt=\"description\" />\n        <input type=\"text\" id=\"description\" ref={descriptionRef} />\n      </label>\n      <label htmlFor=\"location\">\n        <img src={locationSVG} alt=\"location\" />\n        <input type=\"text\" id=\"location\" ref={locationRef} />\n      </label>\n\n      <SearchButton\n        onClick={() => {\n          dispatch({\n            type: \"JOBS_FETCH_REQUESTED\",\n            description: descriptionRef.current!.value,\n            location: locationRef.current!.value,\n          });\n          descriptionRef.current!.value = \"\";\n          locationRef.current!.value = \"\";\n        }}\n      >\n        search\n      </SearchButton>\n    </Container>\n  );\n};\nexport default Menu;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Cards = styled.ul`\n  margin-top: 30px;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\nexport const CardItem = styled.li`\n  cursor: pointer;\n  padding: 0px 10px;\n  margin: 10px;\n  display: flex;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.87);\n  min-width: 300px;\n  max-width: 300px;\n  min-height: 100px;\n  border-radius: 8px;\n  background: #242424;\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n    0 1px 5px 0 rgba(0, 0, 0, 0.12);\n  &:hover {\n    box-shadow: 0px 0px 13px #00c86f;\n    border: 2px solid #00c86f;\n  }\n  img {\n    margin: 10px;\n    width: 40px;\n    height: 40px;\n    border-radius: 100%;\n  }\n  span {\n    margin-top: 10px;\n    font-size: 13px;\n  }\n`;\n\nexport const Content = styled.div`\n  p {\n    font-size: 11px;\n    color: rgba(47, 255, 163, 0.87);\n  }\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { IState } from \"../../interfaces\";\nimport { Container, Cards, CardItem, Content } from \"./styles\";\nimport logoDefault from \"../../assets/images/logo-default.png\";\n\nexport const CardList: React.FC = () => {\n  const jobs = useSelector((state: IState) => state.jobs);\n  const addDefaultSrc = (e: React.ChangeEvent<HTMLImageElement>) => {\n    e.target.src = logoDefault;\n  };\n  return (\n    <Container>\n      <Cards>\n        {jobs.map((job) => (\n          <a\n            key={job.id}\n            href={job.url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <CardItem>\n              <img\n                src={job?.company_logo || logoDefault}\n                alt=\"logo\"\n                onError={addDefaultSrc}\n              />\n              <Content>\n                <span>{job.title}</span>\n                <p>{job.company}</p>\n              </Content>\n            </CardItem>\n          </a>\n        ))}\n      </Cards>\n    </Container>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Menu from \"./components/Menu\";\nimport { CardList } from \"./components/CardList\";\nimport { useDispatch } from \"react-redux\";\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({ type: \"JOBS_FETCH_REQUESTED\" });\n  }, [dispatch]);\n  return (\n    <>\n      <Menu />\n      <CardList />\n    </>\n  );\n};\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  *,html,body{\n    margin:0;\n    padding:0;\n    box-sizing:border-box;\n    border:0;\n    text-decoration:none;\n    list-style:none;\n    outline:none;\n    /* height:100%; */\n  }\n  html,body,#root{\n    height:100%\n  }\n  body{\n    background:#121212;\n    font-family:sans-serif;\n  }\n  button{\n    cursor: pointer;\n  }\n`;\n","import { createActions, createReducer } from \"reduxsauce\";\nimport { produce } from \"immer\";\nimport { AddAction, IState } from \"../interfaces\";\n\nexport const INITIAL_STATE = {\n  jobs: [],\n};\n\nexport const { Types, Creators } = createActions({\n  addJobs: [\"jobs\"],\n});\n\nconst addJobs = (state = INITIAL_STATE, action: AddAction) => {\n  const nextState = produce(state, (draftState: IState) => {\n    draftState.jobs = action.jobs;\n  });\n  return nextState;\n};\n\nconst HANDLERS = {\n  [Types.ADD_JOBS as string]: addJobs,\n};\n\nexport const reducer = createReducer(INITIAL_STATE, HANDLERS);\n","import Reactotron from \"reactotron-react-js\";\nimport { reactotronRedux } from \"reactotron-redux\";\nimport sagaPlugin from \"reactotron-redux-saga\";\n\nconst reactotron = Reactotron.configure()\n  .use(reactotronRedux())\n  .use(sagaPlugin({}));\nif (process.env.NODE_ENV === \"development\") {\n  reactotron.connect();\n}\n\nexport default reactotron;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://jobs.github.com/positions.json\",\n});\nexport const getCards = (description: string = \"\", location: string = \"\") => {\n  return api.get(\"/\", { params: { description, location } });\n};\nexport default api;\n","import { call, takeLatest, put, all } from \"redux-saga/effects\";\nimport { getCards } from \"../services\";\nimport { FetchJobsAction } from \"../interfaces\";\nimport { Creators as actionJobs } from \"./duck\";\n\nfunction* fetchJobs(action: FetchJobsAction) {\n  try {\n    const response = yield call(getCards, action.description, action.location);\n    yield put(actionJobs.addJobs(response.data));\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction* mySaga() {\n  yield all([takeLatest(\"JOBS_FETCH_REQUESTED\", fetchJobs)]);\n}\n\nexport default mySaga;\n","import { reducer } from \"./duck\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport Reactotron from \"../config\";\nimport rootSaga from \"./sagas\";\n\nlet composer;\nlet sagaMiddleware;\n\nif (process.env.NODE_ENV === \"development\") {\n  const sagaMonitor = Reactotron?.createSagaMonitor!();\n  sagaMiddleware = createSagaMiddleware({ sagaMonitor });\n  composer = compose(\n    applyMiddleware(sagaMiddleware),\n    Reactotron?.createEnhancer!()\n  );\n} else {\n  sagaMiddleware = createSagaMiddleware();\n  composer = compose(applyMiddleware(sagaMiddleware));\n}\n\nexport const store = createStore(reducer, composer);\n\nsagaMiddleware.run(rootSaga);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { GlobalStyle } from \"./styles\";\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n      <GlobalStyle />\n    </React.StrictMode>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo-default.a40dd72d.png\";","module.exports = __webpack_public_path__ + \"static/media/description.92f7d9ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/location.12ff661d.svg\";"],"sourceRoot":""}